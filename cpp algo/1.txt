#include <iostream>
using namespace std;

class Solution {
public:
    string longestPalindrome(string s) {

        int i,len1,len2,len,prevlen=0;
        int start=0,end=0;
        int slen = s.size();
        
        if(s.empty() || s.length() < 1)
            return "";
            
        for(i=0;i<slen-1;i++){
            len1 = expandfrommiddle(s,i,i); /*expand from same index for odd string*/
            len2 = expandfrommiddle(s,i,i+1);/*expand from middle 2 elmnts for even string*/
            cout<<"len1 = "<<len1<<"\tlen2= "<<len2<<"\tlen= "<<len<<'\n';
            
            len = max(len1,len2);
            
            if(len > (start-end) && len != prevlen ){
                //cout<<"len "<<len<<"\tprevlen= "<<prevlen<<"\tstart= "<<start<<"\tend= "<<end<<'\n';
                start = i - (len-1)/2;
                end = i + (len)/2;
            }
            prevlen  = len;
        }
        
        return s.substr(start,(end-start)+1);
    }
    
    int expandfrommiddle(string s,int left, int right){
        if(left>right)
            return 0;
        
        
        while(left >=0 && right<s.length() && s[left] == s[right] ){
            left--;
            right++;
        }
        return right-left-1;
    }
};

int main() {
	// your code goes here
	//string s = "forgeeksskeegfor";
	//string s = "ababa";
	string s = "babad";
	Solution sol;
	cout << "string=  " << sol.longestPalindrome(s)<<'\n';
	return 0;
}